연산자와 연산식

연산자의 종류

연산자 종류	연산자	산출값	기능 설명
산술	+, - , * , /, %	숫자	사칙연산 및 나머지 계산
부호	+, -	숫자	음수와 양수의 부호
문자열	+	문자열	두 문자열 연결
대입	=, +=, -=, *=, /=, %=	다양	우변의 값을 좌변의 변수에 대입
	&=, ^=, |=, <<=, >>=, >>>=
증감	++, --	숫자	1만큼 증가/감소
비교	==, !=, >, <, >=, ,<=, instanceof	boolean	값의 비교
논리		!, &, |, &&, ||	boolean	논리적 NOT, AND. OR 연산
조건	(조건식) ? A : B	다양	조건식에 따라 A 또는 B 중 하나 선택
비트		~, &, |, ^	숫자 &	비트 NOT, AND, OR, XOR 연산
		boolean
쉬프트	>>, << , >>>	숫자	비트를 좌측/우측으로 밀어서 이동


연산의 방향과 우선 순위 
	- 연산의 방향: 대부분의 경우 왼쪽에서 오른쪽으로 연산을 시작하고 괄호()를 사용시 우선 연산된다. 
	- 예외1 : 단향 연산자, 부호 연산자, 대입 연산자은 오른쪽에서 왼쪽으로 연산됨

연산자: 

단항 연산식: 피연산자 한개을 요구하는 식
	++x
이항 연산자: 피연산자 두개를 요구하는 식
	x + y
삼항 연산자: 피연사자 세개를 요구하는 식
	(sum>90) ? "A" : "B" 
	
오버플로우

오버플로우: 연산 후의 산출값이 현재 산출 타입으로 표현될 수 없는 경우 오버플로우가 발생해 쓰레값이 저장된다. 

Nanr과 Infinity 연산으로 인한 ArithmeticException

좌측 피연산자가 정수 타입인 경우 나누는 수인 우측 피연산자를 0을 사용할 수 없고, 사용시 ArithmeticException이 발행한다. / 연산 사용시 Infinity, % 연산 사용시 NaN 
